{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/niklasmoss/Documents/work/Houe/code/plastic-recycling-app/components/AuthorizationButton.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport { TokenResponse, useAuthRequest, useAutoDiscovery } from 'expo-auth-session';\nimport Button from \"react-native-web/dist/exports/Button\";\nWebBrowser.maybeCompleteAuthSession();\nexport default function AuthorizationButton() {\n  var discovery = useAutoDiscovery('https://login.microsoftonline.com/65fa44cb-fe68-4b06-ad9f-d4343bd7589f/v2.0');\n\n  var _useAuthRequest = useAuthRequest({\n    clientId: 'a67a4317-87b9-403b-8db9-e0227117bc8a',\n    scopes: ['openid', 'profile', 'email', 'offline_access'],\n    redirectUri: 'http://localhost:19006/one'\n  }, discovery),\n      _useAuthRequest2 = _slicedToArray(_useAuthRequest, 3),\n      request = _useAuthRequest2[0],\n      response = _useAuthRequest2[1],\n      promptAsync = _useAuthRequest2[2];\n\n  useEffect(function () {\n    console.log('Response changed and is now: ');\n    console.log(response);\n\n    if (response && response.type === 'success') {\n      var test = TokenResponse.fromQueryParams(response.params);\n      console.log(test);\n    }\n  }, [response]);\n  useEffect(function () {\n    console.log('Request change and is now: ');\n    console.log(request);\n  }, [request]);\n\n  var onPress = function onPress() {\n    var authSessionResult;\n    return _regeneratorRuntime.async(function onPress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(promptAsync());\n\n          case 2:\n            authSessionResult = _context.sent;\n            console.log(authSessionResult);\n            debugger;\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Button, {\n    title: \"Login test\",\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  });\n}","map":{"version":3,"sources":["/Users/niklasmoss/Documents/work/Houe/code/plastic-recycling-app/components/AuthorizationButton.tsx"],"names":["React","useEffect","WebBrowser","TokenResponse","useAuthRequest","useAutoDiscovery","maybeCompleteAuthSession","AuthorizationButton","discovery","clientId","scopes","redirectUri","request","response","promptAsync","console","log","type","test","fromQueryParams","params","onPress","authSessionResult"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,SAA0BC,aAA1B,EAAyCC,cAAzC,EAAyDC,gBAAzD,QAAiF,mBAAjF;;AAGAH,UAAU,CAACI,wBAAX;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAE5C,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,6EAAD,CAAlC;;AAF4C,wBAIHD,cAAc,CACrD;AACEK,IAAAA,QAAQ,EAAE,sCADZ;AAEEC,IAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,OAAtB,EAA+B,gBAA/B,CAFV;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADqD,EAYrDH,SAZqD,CAJX;AAAA;AAAA,MAIrCI,OAJqC;AAAA,MAI5BC,QAJ4B;AAAA,MAIlBC,WAJkB;;AAmB5Cb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAIA,QAAQ,IAAIA,QAAQ,CAACI,IAAT,KAAkB,SAAlC,EAA6C;AAC3C,UAAMC,IAAI,GAAGf,aAAa,CAACgB,eAAd,CAA8BN,QAAQ,CAACO,MAAvC,CAAb;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD;AACF,GAPQ,EAON,CAACL,QAAD,CAPM,CAAT;AASAZ,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACD,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAKA,MAAMS,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACkBP,WAAW,EAD7B;;AAAA;AACRQ,YAAAA,iBADQ;AAEdP,YAAAA,OAAO,CAACC,GAAR,CAAYM,iBAAZ;AACA;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAMA,SAAQ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,OAAO,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD","sourcesContent":["import React, {useEffect} from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport { makeRedirectUri, TokenResponse, useAuthRequest, useAutoDiscovery } from 'expo-auth-session';\nimport {Button} from 'react-native';\n\nWebBrowser.maybeCompleteAuthSession();\n\nexport default function AuthorizationButton() {\n// Endpoint\n  const discovery = useAutoDiscovery('https://login.microsoftonline.com/65fa44cb-fe68-4b06-ad9f-d4343bd7589f/v2.0');\n  // Request\n  const [request, response, promptAsync] = useAuthRequest(\n    {\n      clientId: 'a67a4317-87b9-403b-8db9-e0227117bc8a',\n      scopes: ['openid', 'profile', 'email', 'offline_access'],\n      // For usage in managed apps using the proxy\n      redirectUri: 'http://localhost:19006/one' \n      /*redirectUri: makeRedirectUri({\n        // For usage in bare and standalone\n        native: 'houe-plastic-recycling://react-native-auth/',\n      }),\n       */\n    },\n    discovery\n  );\n\n  useEffect(() => {\n    console.log('Response changed and is now: ');\n    console.log(response)\n    if (response && response.type === 'success') {\n      const test = TokenResponse.fromQueryParams(response.params)\n      console.log(test)\n    }\n  }, [response])\n\n  useEffect(() => {\n    console.log('Request change and is now: ')\n    console.log(request)\n  }, [request])\n\n  const onPress = async () => {\n    const authSessionResult = await promptAsync();\n    console.log(authSessionResult)\n    debugger;\n  }\n\n  return (<Button title=\"Login test\" onPress={onPress} />);\n}\n"]},"metadata":{},"sourceType":"module"}