{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar enc_base64_1 = __importDefault(require(\"crypto-js/enc-base64\"));\n\nvar enc_utf8_1 = __importDefault(require(\"crypto-js/enc-utf8\"));\n\nvar errors_1 = require(\"./errors\");\n\nvar algorithms_1 = __importDefault(require(\"./algorithms\"));\n\nvar helpers_1 = require(\"./helpers\");\n\nvar algorithms_2 = require(\"../types/algorithms\");\n\nvar defaultOptions = {\n  algorithm: algorithms_2.SupportedAlgorithms.HS256\n};\n\nvar _key;\n\nvar Encoder = function () {\n  function Encoder(body, key, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.body = body;\n    this.options = __assign(__assign({}, defaultOptions), options);\n    _key = key;\n  }\n\n  Encoder.prototype.buildHeader = function () {\n    return {\n      alg: this.options.algorithm,\n      typ: 'JWT'\n    };\n  };\n\n  Encoder.prototype.encodeAndSign = function () {\n    var jsonHeader = JSON.stringify(this.buildHeader());\n    var jsonBody = JSON.stringify(this.body);\n    var base64Header = enc_base64_1.default.stringify(enc_utf8_1.default.parse(jsonHeader));\n    var base64Body = enc_base64_1.default.stringify(enc_utf8_1.default.parse(jsonBody));\n    var encodedHeader = helpers_1.urlEncodeBase64(base64Header);\n    var encodedBody = helpers_1.urlEncodeBase64(base64Body);\n\n    if (!this.options.algorithm || this.options.algorithm === 'none') {\n      return encodedHeader + \".\" + encodedBody + \".\";\n    }\n\n    var algorithm = algorithms_1.default[this.options.algorithm];\n\n    if (!algorithm) {\n      throw new errors_1.AlgorithmNotSupported();\n    }\n\n    var signature = algorithm(encodedHeader + \".\" + encodedBody, _key);\n    var encodedSignature = signature.toString(enc_base64_1.default);\n    var urlSafeEncodedSignature = helpers_1.urlEncodeBase64(encodedSignature);\n    return encodedHeader + \".\" + encodedBody + \".\" + urlSafeEncodedSignature;\n  };\n\n  return Encoder;\n}();\n\nexports.default = Encoder;","map":{"version":3,"sources":["../../lib/encoder.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,eAAA,CAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,YAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,gBAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,aAAA;;AAGA,IAAA,YAAA,GAAA,OAAA,uBAAA;;AAEA,IAAM,cAAc,GAAG;AACrB,EAAA,SAAS,EAAE,YAAA,CAAA,mBAAA,CAAoB;AADV,CAAvB;;AAIA,IAAI,IAAJ;;AAEA,IAAA,OAAA,GAAA,YAAA;AAIE,WAAA,OAAA,CAAY,IAAZ,EAA2B,GAA3B,EAA6C,OAA7C,EAA0E;AAA7B,QAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,OAAA,GAAA,EAAA;AAA6B;;AACxE,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,OAAL,GAAY,QAAA,CAAA,QAAA,CAAA,EAAA,EAAQ,cAAR,CAAA,EAA2B,OAA3B,CAAZ;AAEA,IAAA,IAAI,GAAG,GAAP;AACD;;AAED,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAO;AACL,MAAA,GAAG,EAAE,KAAK,OAAL,CAAa,SADb;AAEL,MAAA,GAAG,EAAE;AAFA,KAAP;AAID,GALD;;AAOA,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,QAAM,UAAU,GAAG,IAAI,CAAC,SAAL,CAAe,KAAK,WAAL,EAAf,CAAnB;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC,SAAL,CAAe,KAAK,IAApB,CAAjB;AAEA,QAAM,YAAY,GAAG,YAAA,CAAA,OAAA,CAAO,SAAP,CAAiB,UAAA,CAAA,OAAA,CAAK,KAAL,CAAW,UAAX,CAAjB,CAArB;AACA,QAAM,UAAU,GAAG,YAAA,CAAA,OAAA,CAAO,SAAP,CAAiB,UAAA,CAAA,OAAA,CAAK,KAAL,CAAW,QAAX,CAAjB,CAAnB;AAEA,QAAM,aAAa,GAAG,SAAA,CAAA,eAAA,CAAgB,YAAhB,CAAtB;AACA,QAAM,WAAW,GAAG,SAAA,CAAA,eAAA,CAAgB,UAAhB,CAApB;;AAEA,QAAI,CAAC,KAAK,OAAL,CAAa,SAAd,IAA2B,KAAK,OAAL,CAAa,SAAb,KAA2B,MAA1D,EAAkE;AAChE,aAAU,aAAa,GAAA,GAAb,GAAiB,WAAjB,GAA4B,GAAtC;AACD;;AAED,QAAM,SAAS,GAAG,YAAA,CAAA,OAAA,CAAiB,KAAK,OAAL,CAAa,SAA9B,CAAlB;;AAEA,QAAI,CAAC,SAAL,EAAgB;AACd,YAAM,IAAI,QAAA,CAAA,qBAAJ,EAAN;AACD;;AAED,QAAM,SAAS,GAAG,SAAS,CAAI,aAAa,GAAA,GAAb,GAAiB,WAArB,EAAoC,IAApC,CAA3B;AACA,QAAM,gBAAgB,GAAG,SAAS,CAAC,QAAV,CAAmB,YAAA,CAAA,OAAnB,CAAzB;AACA,QAAM,uBAAuB,GAAG,SAAA,CAAA,eAAA,CAAgB,gBAAhB,CAAhC;AAEA,WAAU,aAAa,GAAA,GAAb,GAAiB,WAAjB,GAA4B,GAA5B,GAAgC,uBAA1C;AACD,GAzBD;;AA0BF,SAAA,OAAA;AAAC,CA5CD,EAAA;;AA8CA,OAAA,CAAA,OAAA,GAAe,OAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar enc_base64_1 = __importDefault(require(\"crypto-js/enc-base64\"));\nvar enc_utf8_1 = __importDefault(require(\"crypto-js/enc-utf8\"));\nvar errors_1 = require(\"./errors\");\nvar algorithms_1 = __importDefault(require(\"./algorithms\"));\nvar helpers_1 = require(\"./helpers\");\nvar algorithms_2 = require(\"../types/algorithms\");\nvar defaultOptions = {\n    algorithm: algorithms_2.SupportedAlgorithms.HS256,\n};\nvar _key;\nvar Encoder = /** @class */ (function () {\n    function Encoder(body, key, options) {\n        if (options === void 0) { options = {}; }\n        this.body = body;\n        this.options = __assign(__assign({}, defaultOptions), options);\n        _key = key;\n    }\n    Encoder.prototype.buildHeader = function () {\n        return {\n            alg: this.options.algorithm,\n            typ: 'JWT'\n        };\n    };\n    Encoder.prototype.encodeAndSign = function () {\n        var jsonHeader = JSON.stringify(this.buildHeader());\n        var jsonBody = JSON.stringify(this.body);\n        var base64Header = enc_base64_1.default.stringify(enc_utf8_1.default.parse(jsonHeader));\n        var base64Body = enc_base64_1.default.stringify(enc_utf8_1.default.parse(jsonBody));\n        var encodedHeader = helpers_1.urlEncodeBase64(base64Header);\n        var encodedBody = helpers_1.urlEncodeBase64(base64Body);\n        if (!this.options.algorithm || this.options.algorithm === 'none') {\n            return encodedHeader + \".\" + encodedBody + \".\";\n        }\n        var algorithm = algorithms_1.default[this.options.algorithm];\n        if (!algorithm) {\n            throw new errors_1.AlgorithmNotSupported();\n        }\n        var signature = algorithm(encodedHeader + \".\" + encodedBody, _key);\n        var encodedSignature = signature.toString(enc_base64_1.default);\n        var urlSafeEncodedSignature = helpers_1.urlEncodeBase64(encodedSignature);\n        return encodedHeader + \".\" + encodedBody + \".\" + urlSafeEncodedSignature;\n    };\n    return Encoder;\n}());\nexports.default = Encoder;\n//# sourceMappingURL=encoder.js.map"]},"metadata":{},"sourceType":"script"}