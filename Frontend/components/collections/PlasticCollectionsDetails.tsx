import { DateTime } from "luxon";
import React, { FC } from "react";
import { Text, View } from "react-native";
import { List } from "react-native-paper";

type PlasticCollectionDetailProps = { plasticCollection: PlasticCollection };

// TODO: This should come autogenerated from the backend!
export type PlasticCollection = {
  id: string;
  requesterId: string;
  recipientPartnerId: string;
  numberOfUnits: number;
  streetName: string;
  streetNumber: string;
  city: string;
  zipCode: string;
  companyName?: string;
  comment?: string;
  scheduledPickupDate?: string;
  collectionStatus: "pending" | "scheduled" | "delivered" | "received";
};

const PlasticCollectionDetail: FC<PlasticCollectionDetailProps> = ({
  plasticCollection,
  children,
}) => {
  const {
    companyName,
    streetName,
    streetNumber,
    zipCode,
    city,
    numberOfUnits,
    comment,
    scheduledPickupDate,
  } = plasticCollection;

  const scheduledPickupDateString = scheduledPickupDate
    ? DateTime.fromISO(scheduledPickupDate).toLocaleString({
        month: "long",
        day: "2-digit",
        minute: "2-digit",
        hour: "2-digit",
        hour12: false,
      })
    : undefined;
  const title = companyName || `${streetName} ${streetNumber}`;

  return (
    <List.Accordion title={title}>
      {companyName && <Text>{companyName}</Text>}
      <Text>
        {streetName} {streetNumber}
      </Text>
      <Text>
        {city} {zipCode}
      </Text>
      {comment && <Text>{comment}</Text>}
      <Text>Antal enheder {numberOfUnits}</Text>
      {scheduledPickupDateString !== undefined && (
        <Text>Afhentning planlagt til {scheduledPickupDateString}</Text>
      )}
      {children}
      {/* TODO: Make a button to register schedule pick-up and another to register delivery */}
    </List.Accordion>
  );
};

type Props = {
  plasticCollections: PlasticCollection[];
  title: string;
  children?: (collectionId: string) => React.ReactNode;
};

const PlasticCollectionsDetails: FC<Props> = ({
  plasticCollections,
  title,
  children,
}) => {
  return (
    <List.Section>
      <List.Subheader>{title}</List.Subheader>
      {plasticCollections.map((collection) => (
        <View key={collection.id}>
          <PlasticCollectionDetail plasticCollection={collection}>
            {children && children(collection.id)}
          </PlasticCollectionDetail>
        </View>
      ))}
    </List.Section>
  );
};

export default PlasticCollectionsDetails;
