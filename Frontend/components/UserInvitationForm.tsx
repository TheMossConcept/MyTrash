import axios from "axios";
import React, { useState } from "react";
import { ActivityIndicator, Button, StyleSheet } from "react-native";
import axiosUtils from "../utils/axios";

import { View } from "./Themed";
import DismissableSnackbar from "./shared/DismissableSnackbar";
import RoleSelector from "./RoleSelector";
import useAccessToken from "../hooks/useAccessToken";
import UserForm, { UserFormData } from "./UserForm";

// TODO: This should come from autogenerated typings from the backend

export default function UserInvitationForm() {
  const [rolesToInviteTo, setRolesToInviteTo] = useState<string[]>([]);
  const [, setUserData] = useState<UserFormData | null>(null);
  const [isLoadingInvite, setIsLoadingInvite] = useState(false);

  const onDismiss = () => {
    setEmailToInvite("");
  };

  const [emailToInvite, setEmailToInvite] = useState("");
  const [showSnackbar, setShowSnackbar] = useState(false);

  const accessToken = useAccessToken();
  const inviteUser = () => {
    if (accessToken) {
      axios
        .post(
          "/InviteExternalUser",
          {
            email: emailToInvite,
            appRoleIds: rolesToInviteTo,
          },
          {
            params: {
              code: "aWOynA5/NVsQKHbFKrMS5brpi5HtVZM3oaw4BEiIWDaHxAb0OdBi2Q==",
            },
            ...axiosUtils.getSharedAxiosConfig(accessToken),
            // ..axiosUtils.getSharedAxiosConfig(accessToken),
          }
        )
        .then(() => setShowSnackbar(true))
        .finally(() => setIsLoadingInvite(false));

      setEmailToInvite("");
      setIsLoadingInvite(true);
    }
  };

  return (
    <View style={styles.container}>
      {isLoadingInvite ? (
        <ActivityIndicator />
      ) : (
        <View>
          <RoleSelector
            // TODO: Should be the result of the aggregate validation once that is done
            selectionDisabled={false}
            roleSelectionState={[rolesToInviteTo, setRolesToInviteTo]}
          />
        </View>
      )}
      <UserForm handleUserDataChange={setUserData} style={styles.userForm} />
      <Button onPress={inviteUser} title="Inviter bruger" />
      <DismissableSnackbar
        title="Brugeren er blevet inviteret"
        showState={[showSnackbar, setShowSnackbar]}
        onDismiss={onDismiss}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    justifyContent: "center",
    alignItems: "center",
    width: "100%",
    height: "100%",
  },
  userForm: {
    marginTop: 20,
    marginBottom: 20,
  },
});
